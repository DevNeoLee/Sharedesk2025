<% unless flash.empty? %>
    <script type="text/javascript">
        <% flash.each do |f| %>
            <% type = f[0].to_s.gsub('alert', 'error').gsub('notice', 'info') %>
            
            // Function to show toast message
            function showToast(type, message) {
                if (typeof window.toastr !== 'undefined') {
                    // Simple toastr call without complex options
                    toastr[type](message);
                } else {
                    // Create a simple fallback notification
                    const notification = document.createElement('div');
                    notification.className = `alert alert-${type === 'error' ? 'danger' : type === 'info' ? 'info' : 'success'} alert-dismissible fade show position-fixed`;
                    notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
                    notification.innerHTML = `
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    `;
                    document.body.appendChild(notification);
                    
                    // Auto remove after 5 seconds
                    setTimeout(() => {
                        if (notification.parentNode) {
                            notification.remove();
                        }
                    }, 5000);
                }
            }
            
            // Show the message
            showToast('<%= type %>', '<%= j f[1] %>');
        <% end %>
    </script>
<% end %>

<!-- Initialize toastr and check for queued messages on page load -->
<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function() {
        // Simple toastr initialization
        if (typeof window.toastr !== 'undefined') {
            toastr.options = {
                closeButton: true,
                progressBar: true,
                timeOut: 5000
            };
        }
        
        // Check localStorage for queued messages
        const storedMessages = JSON.parse(localStorage.getItem('toastrQueue') || '[]');
        if (storedMessages.length > 0) {
            storedMessages.forEach(function(msg) {
                if (typeof window.toastr !== 'undefined') {
                    toastr[msg.type](msg.message);
                }
            });
            // Clear stored messages
            localStorage.removeItem('toastrQueue');
        }
    });
</script>

<!-- Star rating CSS is now centralized in site.scss -->

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize all star rating elements
    document.querySelectorAll('.star-rating').forEach(function(element, index) {
      const originalScore = parseFloat(element.dataset.score) || 0;
      
      // Round to nearest 0.5
      const roundedScore = Math.round(originalScore * 2) / 2;
      element.setAttribute('data-score', roundedScore);
    });
    
    // Check if user has consented to location sharing
    if (!sessionStorage.getItem('locationConsentShown')) {
      showLocationConsentModal();
    }
  });
  
  function showLocationConsentModal() {
    const modal = document.getElementById('locationConsentModal');
    if (modal) {
      modal.style.display = 'block';
    }
  }
  
  function acceptLocationSharing() {
    sessionStorage.setItem('locationConsentShown', 'true');
    sessionStorage.setItem('locationConsent', 'true');
    
    // Show loading state
    const modal = document.getElementById('locationConsentModal');
    if (modal) {
      const acceptBtn = modal.querySelector('button[onclick="acceptLocationSharing()"]');
      const originalText = acceptBtn.innerHTML;
      acceptBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
      acceptBtn.disabled = true;
    }
    
    // Send consent to server and get updated location
    fetch('/location_consent', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      },
      body: JSON.stringify({ consent: true })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Get updated location from server
        return fetch('/current_user_location', {
          method: 'GET',
          headers: {
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
          }
        });
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.location) {
        // Update all location references on the page
        updateLocationOnPage(data.location);
      }
    })
    .catch(error => {
      console.error('Error updating location:', error);
      // Fallback to page reload if AJAX fails
      window.location.reload();
    })
    .finally(() => {
      closeLocationModal();
    });
  }
  
  function declineLocationSharing() {
    sessionStorage.setItem('locationConsentShown', 'true');
    sessionStorage.setItem('locationConsent', 'false');
    closeLocationModal();
  }
  
  function closeLocationModal() {
    const modal = document.getElementById('locationConsentModal');
    if (modal) {
      modal.style.display = 'none';
    }
  }

  function updateLocationOnPage(location) {
    // Add updating animation to location elements
    const locationElements = document.querySelectorAll('.display-4, .btn-cta, input[name="q[address_cont]"]');
    locationElements.forEach(el => {
      el.classList.add('location-update', 'updating');
    });
    
    // Update the main heading with animation
    const mainHeading = document.querySelector('.display-4');
    if (mainHeading) {
      setTimeout(() => {
        mainHeading.innerHTML = `Need a Desk in ${location}‚ÄîFast?`;
        mainHeading.classList.remove('updating');
      }, 150);
    }
    
    // Update the "Find in Your Area" button link
    const findButton = document.querySelector('.btn-cta');
    if (findButton) {
      const link = findButton.closest('a');
      if (link) {
        link.href = `/search?q[address_cont]=${encodeURIComponent(location)}`;
        setTimeout(() => {
          findButton.classList.remove('updating');
        }, 300);
      }
    }
    
    // Update search form location field
    const searchField = document.querySelector('input[name="q[address_cont]"]');
    if (searchField) {
      setTimeout(() => {
        searchField.value = location;
        searchField.classList.remove('updating');
      }, 450);
    }
    
    // Remove updating class from all elements after animation
    setTimeout(() => {
      locationElements.forEach(el => {
        el.classList.remove('location-update', 'updating');
      });
    }, 600);
    
    // Show success message
    if (typeof toastr !== 'undefined') {
      toastr.success(`Location updated to ${location}!`, 'Location Updated', {
        timeOut: 3000,
        extendedTimeOut: 1000,
        closeButton: true,
        progressBar: true
      });
    } else {
      // Fallback notification
      const notification = document.createElement('div');
      notification.className = 'alert alert-success alert-dismissible fade show location-update-notification';
      notification.innerHTML = `
        <div class="d-flex align-items-center">
          <i class="fas fa-check-circle me-2" style="color: #28a745;"></i>
          <div>
            <strong>Location Updated!</strong><br>
            <small>Your location is now set to ${location}</small>
          </div>
          <button type="button" class="btn-close ms-auto" onclick="this.parentElement.parentElement.remove()"></button>
        </div>
      `;
      document.body.appendChild(notification);
      
      // Auto-remove after 4 seconds
      setTimeout(() => {
        if (notification.parentNode) {
          notification.style.animation = 'slideOutRight 0.3s ease-out';
          setTimeout(() => {
            if (notification.parentNode) {
              notification.parentNode.removeChild(notification);
            }
          }, 300);
        }
      }, 4000);
    }
  }
</script>

<!-- Location Consent Modal -->
<div id="locationConsentModal" class="modal" style="display: none;">
  <div class="modal-content">
    <div class="modal-header">
      <h3><i class="fas fa-map-marker-alt"></i> Location Permission</h3>
    </div>
    <div class="modal-body">
      <p>We would like to use your approximate location (city) information to provide better service.</p>
      <ul>
        <li>üîç <strong>Nearby Workspace Search</strong></li>
        <li>üìç <strong>Personalized Recommendations</strong></li>
        <li>‚ö° <strong>Quick Local Search</strong></li>
      </ul>
      <p><small>‚Ä¢ Only approximate city information is collected using IP address<br>
      ‚Ä¢ No exact address or personal information is collected<br>
      ‚Ä¢ You can withdraw consent at any time in settings</small></p>
    </div>
    <div class="modal-footer">
      <button onclick="declineLocationSharing()" class="btn btn-outline-secondary">Decline</button>
      <button onclick="acceptLocationSharing()" class="btn btn-primary">Accept</button>
    </div>
  </div>
</div>

<%# front two main images with local access %>
<div class="bg-light p-5 rounded  mb-5 section">
  <div class="text-center mb-4">
    <h1 class="display-4 mb-3">
        Need a Desk in <%= @location_received %>‚ÄîFast?
    </h1>
    <p class="lead text-muted" style="letter-spacing: 1px;">
        Book a workspace near you in seconds.
    </p>
  </div>
  <div class="row">
    <div class="col-md-6 mb-4">
      <%= image_tag "main_image2.jpg", class: "img-fluid rounded" %>
    </div>
    <div class="col-md-6 mb-4">
      <%= image_tag "main_image1.jpg", class: "img-fluid rounded" %>
    </div>
  </div>
  <div class="text-start mt-4">
    <%= link_to search_path(q: {"address_cont": @location_received }) do %>
      <button class="btn btn-primary btn-cta">Find in Your Area</button>
    <% end %>
  </div>
</div>


<%# one click search for three main cities ard the world %>
<div class="bg-light p-5 rounded  mb-5 section">
    <div class="text-center">
        <h2>Workspaces in Every City</h2>
        <p class="lead text-muted" style="letter-spacing: 1px; margin-top: 0.5rem">Find top-rated desks and offices wherever you are.</p>
    </div>
    <br>
    <div class="row">
        <div class="col-md-4 col-sm-12">        
            <%= link_to search_path(q:{"address_cont": "NYC"} ) do %>
                <div class="card shadow mb-2 city-card">
                    <div class="card-header">       
                        <h2><strong>NYC</strong></h2>
                    </div>
                    <%= image_tag "nyc_home_page_pexels-ono-kosuki.jpg", class: "img-fluid image-medium image_response" %>
                    <div class="card-body">
                        <div class="card-text">
                            Find Home on Our Cozy Cowork Places Just Around the Corner
                        </div>
                    </div>
                </div>
            <% end %>    
        </div>    
        <div class="col-md-4 col-sm-12">
            <%= link_to search_path(q:{"address_cont": "Kolkata"}) do %>
                <div class="card shadow mb-2 city-card">
                    <div class="card-header">                    
                        <h2><strong>Kolkata</strong></h2>                    
                    </div>
                    <%= image_tag "kolkata_home_page_pexels-neosiam-.jpg", class: "img-fluid image-medium image_response"%>
                    <div class="card-body">
                        <div class="card-text">
                            Professional Cowork Space in Busy Diverse Dinamic City
                        </div>
                    </div>
                </div>
            <% end %>
        </div>
        <div class="col-md-4 col-sm-12">
            <%= link_to search_path(q:{"address_cont": "Bangkok"}) do %>
                <div class="card shadow mb-2 city-card">
                    <div class="card-header">                    
                        <h2><strong>Bangkok</strong></h2>                    
                    </div>
                    <%= image_tag "bangkok_home_page_pexels-nick-wehrli.jpg" , class: "img-fluid image-medium"%>                         
                    <div class="card-body">
                        <div class="card-text">
                            Remote Work Desk Spot in This Beautiful Backpackers Heaven 
                        </div>
                    </div>
                </div>
            <% end %>
        </div>
    </div>
</div>
    


<%# Ad for Hosting your Space %>
<div class="bg-light p-5 rounded  mb-5 section">

        <h2 class="text-center">Turn Your Space into Extra Income.</h2>
        <%= link_to new_user_registration_path do %>
            <h5 class="text-center pt-3">Join Desk<%= image_tag 'orangePolygonLarge.png', width: "50" %>Space & List your desk or office and connect with professionals in your area.</h5>
        <% end %>
       
</div>

<%# mid-search form %>
<div class="bg-light mb-5 p-5 rounded section">
    <div class="" style="top: 20px; z-index: 1000;">
        <h2 class="text-center mb-5"> Reserve Your Desk</h2>

        <%= search_form_for @search, url: search_path, method: :get do |f| %>
            <div class="row align-items-end">
                <div class="col-md-5 mb-3">
                    <label class="form-label text-muted mb-2">Destination</label>
                    <div class="input-with-clear">
                      <%= f.search_field :address_cont, placeholder: "Where are you going?", class: "form-control reserve-search-field", autocomplete: "off" %>
                      <span class="custom-clear" onclick="clearLocationField()" title="Clear">√ó</span>
                    </div>
                </div>
                <div class="col-md-2 mb-3">
                    <label class="form-label text-muted mb-2">Start Date</label>
                    <div class="date-input-container">
                        <%= text_field_tag :start_date, nil, {placeholder: "Start Date", id: "start_date", class: "form-control reserve-search-field"}%>
                        <i class="fas fa-calendar-alt date-icon" onclick="openStartDatePicker()"></i>
                    </div>
                </div>
                <div class="col-md-2 mb-3">
                    <label class="form-label text-muted mb-2">End Date</label>
                    <div class="date-input-container">
                        <%= text_field_tag :end_date, nil, placeholder: "End Date", class: "form-control reserve-search-field", id: "end_date"%>
                        <i class="fas fa-calendar-alt date-icon" onclick="openEndDatePicker()"></i>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <%= f.submit "Check Availability", class: "btn btn-primary btn-cta", onclick: "logFormData()"%>
                </div>
            </div>
        <% end %>
    </div>
</div>

<%# Top Most Poplular Picks %>
<div class="bg-light p-5 rounded  col-md-12 mb-5 section">
    <div class="text-center mb-5 h3">
        <h2 class="title_font">Top-Rated Workspaces by Our Community </h2>
    </div>
    <div class="row">    
        <%= render @best_rooms %>
    </div>
</div>

<%# customer reviews %>
<div class="bg-light p-5 rounded  mb-5 section">
    <div class="text-center">
        <h2 class="mb-4">People Love DeskShare ‚Äì Here‚Äôs Why</h2>
    </div>
    <div class="col-md-12"> 
        <%= render partial: 'reviews/review', locals: {reviews: @best_reviews} %>
    </div>
</div>

<script>
    // Date picker functions
    function openStartDatePicker() {
        $("#start_date").datepicker("show");
    }
    
    function openEndDatePicker() {
        $("#end_date").datepicker("show");
    }
    
    // Wait for jQuery and jQuery UI to be loaded
    function initDatepickers() {
        if (typeof $ !== 'undefined' && typeof $.fn.datepicker !== 'undefined') {
            $("#start_date").datepicker({
                dateFormat: 'dd-mm-yy',
                minDate: 0,
                maxDate: '+3m',
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                closeText: 'Done',
                currentText: 'Today',
                onSelect: function(selectedDate) {
                    $("#end_date").datepicker("option", "minDate", selectedDate);
                    $("#end_date").removeAttr('disabled');
                }
            });
            
            $("#end_date").datepicker({
                dateFormat: 'dd-mm-yy',
                minDate: 0,
                maxDate: '+6m',
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                closeText: 'Done',
                currentText: 'Today',
                onSelect: function(selectedDate) {
                    $("#start_date").datepicker("option", "maxDate", selectedDate);
                }
            });
            
            // Initially disable end date
            $("#end_date").attr('disabled', true);
            
            // Add click handlers
            $("#start_date").click(function() {
                $(this).datepicker("show");
            });
            
            $("#end_date").click(function() {
                if (!$(this).attr('disabled')) {
                    $(this).datepicker("show");
                }
            });
        } else {
            setTimeout(initDatepickers, 500);
        }
    }
    
    // Try multiple ways to initialize
    $(document).ready(function() {
        initDatepickers();
    });
    
    // Also try when window loads
    window.addEventListener('load', function() {
        initDatepickers();
    });
    
    // Fallback for older browsers
    document.addEventListener('DOMContentLoaded', function() {
        initDatepickers();
    });
    
    // Function to log form data before submission
    function logFormData() {
        const startDate = document.getElementById('start_date').value;
        const endDate = document.getElementById('end_date').value;
        const destination = document.querySelector('input[name="q[address_cont]"]').value;
        
        // Form validation can be added here if needed
    }

function clearLocationField() {
  var input = document.getElementById('q_address_cont');
  if (input) {
    input.value = '';
    input.focus();
    var event = new Event('input', { bubbles: true });
    input.dispatchEvent(event);
  }
}

document.addEventListener('DOMContentLoaded', function() {
  var input = document.getElementById('q_address_cont');
  var clearBtn = document.querySelector('.custom-clear');
  if (input && clearBtn) {
    function toggleClear() {
      clearBtn.style.display = input.value ? 'block' : 'none';
    }
    input.addEventListener('input', toggleClear);
    input.addEventListener('focus', toggleClear);
    input.addEventListener('blur', function() {
      setTimeout(() => clearBtn.style.display = 'none', 100);
    });
    toggleClear();
  }
});
</script>

<%= form_with model: [@room, @room.reviews.new], local: true do |f|%>
<div class="card p-3 shadow">
    <div class="form-group d-flex">
        <div class="p-2 col-md-6"><%= f.text_field :comment, placeholder: "Write review..", class: "form-control" %></div>
        <span class="p-2 mt-1">Rate: </span><div id="stars" class="mt-2 pr-2 pl-2 star_min_width"></div>
        <div class="p-2"><%= f.hidden_field :room_id, value: @room.id %></div>

        <div class="actions">
            <%= f.submit "Create Review", class: "btn btn-primary mt-2"%>
        </div>
    </div>

</div>
<% end %>

<!-- Interactive star rating CSS is now centralized in site.scss -->

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const ratingContainer = document.getElementById('rating-container');
    if (!ratingContainer) return;
    
    let currentRating = 0;
    
    // Clear existing content
    ratingContainer.innerHTML = '';
    
    // Create interactive star rating element
    const starRating = document.createElement('div');
    starRating.className = 'interactive-star-rating';
    starRating.setAttribute('data-rating', '0');
    starRating.style.display = 'inline-block';
    
    // Add click event for rating
    starRating.addEventListener('click', function(e) {
      const rect = starRating.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const width = rect.width;
      const starWidth = width / 5;
      const clickedStar = Math.ceil(x / starWidth);
      
      currentRating = Math.min(5, Math.max(1, clickedStar));
      starRating.setAttribute('data-rating', currentRating);
      document.getElementById('review_rating').value = currentRating;
    });
    
    // Add hover effects
    starRating.addEventListener('mousemove', function(e) {
      const rect = starRating.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const width = rect.width;
      const starWidth = width / 5;
      const hoverStar = Math.ceil(x / starWidth);
      
      const hoverRating = Math.min(5, Math.max(0, hoverStar));
      starRating.setAttribute('data-rating', hoverRating);
    });
    
    starRating.addEventListener('mouseleave', function() {
      starRating.setAttribute('data-rating', currentRating);
    });
    
    ratingContainer.appendChild(starRating);
  });
</script>
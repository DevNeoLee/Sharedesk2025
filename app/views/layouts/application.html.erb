<!DOCTYPE html>
<html>
  <head>
    <title>DeskShare</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/themes/base/jquery-ui.min.css" %>
    <%= stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" %>
    <%= stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.1.4/toastr.min.css" %>
    
    <!-- Load jQuery first -->
    <%= javascript_include_tag "https://code.jquery.com/jquery-3.7.1.min.js", crossorigin: "anonymous", integrity: "sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" %>
    
    <!-- Load jQuery UI -->
    <%= javascript_include_tag "https://code.jquery.com/ui/1.13.2/jquery-ui.min.js", crossorigin: "anonymous" %>
    
    <!-- Load Toastr JavaScript after jQuery -->
    <%= javascript_include_tag "https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.1.4/toastr.min.js" %>
    
    <!-- Font Awesome is already loaded via CDN -->
    
    <%= javascript_importmap_tags %>

    <%= javascript_include_tag "https://maps.googleapis.com/maps/api/js?key=#{ ENV['MAPS_API_KEY']}&libraries=places&loading=async",
                            async: true,
                            defer: true,
                            "data-turbo-eval": false %>
    
    <!-- Backup Stimulus loading script -->
    <script>
      // Google Maps API debugging logs
      console.log('=== Google Maps API Debug ===');
      console.log('Current page:', window.location.pathname);
      console.log('Environment:', '<%= Rails.env %>');
      console.log('API Key present:', '<%= ENV['MAPS_API_KEY'].present? %>');
      console.log('API Key starts with:', '<%= ENV['MAPS_API_KEY']&.first(10) %>');
      
      // Check Stimulus controller loading status
      console.log('=== Stimulus Loading Check ===');
      console.log('Importmap available:', typeof window.importmap !== 'undefined');
      console.log('Stimulus available:', typeof window.Stimulus !== 'undefined');
      
      // Check Google Maps API loading status
      window.addEventListener('load', function() {
        console.log('Page loaded, checking Google Maps API...');
        
        // Check API key
        const script = document.querySelector('script[src*="maps.googleapis.com"]');
        if (script) {
          console.log('‚úÖ Google Maps script found:', script.src);
        } else {
          console.error('‚ùå Google Maps script not found');
        }
        
        // Check Google Maps object
        setTimeout(function() {
          if (typeof google !== 'undefined' && google.maps) {
            console.log('‚úÖ Google Maps API loaded successfully');
            console.log('Available services:', Object.keys(google.maps));
          } else {
            console.error('‚ùå Google Maps API not loaded');
            console.log('Google object:', typeof google);
            if (typeof google !== 'undefined') {
              console.log('Google maps object:', typeof google.maps);
            }
          }
        }, 2000);
      });
      
      // Google Maps API error handling
      window.gm_authFailure = function() {
        console.error('‚ùå Google Maps API authentication failed');
        console.log('This usually means the API key is invalid or has restrictions');
      };
      
      // Backup loading if Stimulus is not loaded
      window.addEventListener('load', function() {
        setTimeout(function() {
          if (typeof window.Stimulus === 'undefined') {
            console.log('‚ö†Ô∏è Stimulus not loaded, attempting backup loading...');
            
            // Try loading Stimulus from unpkg CDN (more compatible)
            const script = document.createElement('script');
            script.src = 'https://unpkg.com/@hotwired/stimulus@3.2.2/dist/stimulus.umd.js';
            script.onload = function() {
              console.log('‚úÖ Stimulus loaded from unpkg CDN');
              
              // Initialize Stimulus application
              if (typeof Stimulus !== 'undefined') {
                window.Stimulus = Stimulus.Application.start();
                window.Stimulus.debug = true;
                console.log('‚úÖ Stimulus application started');
                
                // Try manual controller registration
                try {
                  // Check if maps controller exists
                  const form = document.querySelector('form[data-controller="maps"]');
                  if (form) {
                    console.log('Found form with maps controller, attempting to initialize...');
                    // Try simple map initialization
                    if (typeof google !== 'undefined' && google.maps) {
                      console.log('Google Maps available, initializing basic map...');
                      const mapContainer = form.querySelector('[data-maps-target="map"]');
                      if (mapContainer) {
                        const map = new google.maps.Map(mapContainer, {
                          center: { lat: 37.7749, lng: -122.4194 },
                          zoom: 17
                        });
                        console.log('‚úÖ Basic map initialized');
                        
                        // Try to add basic autocomplete functionality
                        const addressField = form.querySelector('[data-maps-target="field"]');
                        if (addressField && google.maps.places) {
                          try {
                            const autocomplete = new google.maps.places.Autocomplete(addressField);
                            autocomplete.addListener('place_changed', function() {
                              const place = autocomplete.getPlace();
                              if (place.geometry) {
                                map.setCenter(place.geometry.location);
                                map.setZoom(17);
                                
                                // Update hidden fields
                                const latField = form.querySelector('[data-maps-target="latitude"]');
                                const lngField = form.querySelector('[data-maps-target="longitude"]');
                                if (latField) latField.value = place.geometry.location.lat();
                                if (lngField) lngField.value = place.geometry.location.lng();
                                
                                console.log('‚úÖ Autocomplete functionality added');
                              }
                            });
                            console.log('‚úÖ Autocomplete initialized');
                          } catch (error) {
                            console.error('Error initializing autocomplete:', error);
                          }
                        }
                      }
                    }
                  }
                } catch (error) {
                  console.error('Error initializing backup map:', error);
                }
              }
            };
            script.onerror = function() {
              console.error('‚ùå Failed to load Stimulus from unpkg CDN');
              
              // Fallback: Direct Google Maps initialization without Stimulus
              console.log('üîÑ Attempting direct Google Maps initialization...');
              try {
                const form = document.querySelector('form[data-controller="maps"]');
                if (form && typeof google !== 'undefined' && google.maps) {
                  const mapContainer = form.querySelector('[data-maps-target="map"]');
                  const addressField = form.querySelector('[data-maps-target="field"]');
                  
                  if (mapContainer) {
                    const map = new google.maps.Map(mapContainer, {
                      center: { lat: 37.7749, lng: -122.4194 },
                      zoom: 17
                    });
                    console.log('‚úÖ Direct map initialization successful');
                    
                    // Add autocomplete
                    if (addressField && google.maps.places) {
                      const autocomplete = new google.maps.places.Autocomplete(addressField);
                      autocomplete.addListener('place_changed', function() {
                        const place = autocomplete.getPlace();
                        if (place.geometry) {
                          map.setCenter(place.geometry.location);
                          map.setZoom(17);
                          
                          const latField = form.querySelector('[data-maps-target="latitude"]');
                          const lngField = form.querySelector('[data-maps-target="longitude"]');
                          if (latField) latField.value = place.geometry.location.lat();
                          if (lngField) lngField.value = place.geometry.location.lng();
                        }
                      });
                      console.log('‚úÖ Direct autocomplete initialization successful');
                    }
                  }
                }
              } catch (error) {
                console.error('Error in direct initialization:', error);
              }
            };
            document.head.appendChild(script);
          } else {
            console.log('‚úÖ Stimulus already loaded');
          }
        }, 3000); // Check after 3 seconds
      });
    </script>
    <%= favicon_link_tag asset_path('orangePolygonLarge.png') %>
    
    <!-- Font Awesome star rating system is now handled in individual pages -->
  </head>

  <body>
    <script>
function openMobileDrawer() {
  document.getElementById('mobileDrawer').classList.add('open');
  document.getElementById('mobileBackdrop').classList.add('show');
}
function closeMobileDrawer() {
  document.getElementById('mobileDrawer').classList.remove('open');
  document.getElementById('mobileBackdrop').classList.remove('show');
}
</script>
    <%# navbar %>
    <%= render 'shared/navbar' %>      
  
    <%# main %>
    <%= render 'shared/message'%>
    <div class="container main" id="main">

      <%= yield %>

    </div>
    <%= render 'shared/footer' %>
  </body>
</html>
